/*
 * MainFrame.java
 *
 * Created on 23. Februar 2007, 08:58
 */

package com.ptvag.logeval;

import java.awt.Component;
import java.awt.FlowLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author  xzas
 */
public class MainFrame extends javax.swing.JFrame implements Constants, IOutputter {
    
    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        initConfigChooseCombo();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        configLayeredPane = new javax.swing.JLayeredPane();
        configPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        konfigDirTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        konfigNameTextField = new javax.swing.JTextField();
        configChooseComboBox = new javax.swing.JComboBox();
        loadKonfigButton = new javax.swing.JButton();
        saveKonfigButton = new javax.swing.JButton();
        logFilesLayeredPane = new javax.swing.JLayeredPane();
        directoriesPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        logDirTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nodeRecognizerTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        logRecognizerTextField = new javax.swing.JTextField();
        showFilesButton = new javax.swing.JButton();
        gzippedCheckBox = new javax.swing.JCheckBox();
        extractionLayeredPane = new javax.swing.JLayeredPane();
        dbParamsLayeredPane = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dbUrlTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jdbcDriverClassTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dbUserTextField = new javax.swing.JTextField();
        dbPasswordTextField = new javax.swing.JTextField();
        testConnectionButton = new javax.swing.JButton();
        extractToFileLayeredPane = new javax.swing.JLayeredPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        outputFileFieldSeparatorTextField = new javax.swing.JTextField();
        outputFileInsertHeaderCheckBox = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        outputFileNameTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        outputFileFieldsTextField = new javax.swing.JTextField();
        extractFileButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        rulesPane = new java.awt.ScrollPane();
        rulesPanel = new javax.swing.JPanel();
        newExtractionRuleButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log Evaluator");
        jLabel10.setText("KonfigDir:");

        konfigDirTextField.setText("C:\\TEMP");

        jLabel11.setText("KonfigName:");

        konfigNameTextField.setText("logeval");

        configChooseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        configChooseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configChooseComboBoxActionPerformed(evt);
            }
        });

        loadKonfigButton.setText("Load Konfig");
        loadKonfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadKonfigButtonActionPerformed(evt);
            }
        });

        saveKonfigButton.setText("Save Konfig");
        saveKonfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveKonfigButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout configPanelLayout = new org.jdesktop.layout.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(configPanelLayout.createSequentialGroup()
                .add(configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(configPanelLayout.createSequentialGroup()
                        .add(loadKonfigButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(saveKonfigButton))
                    .add(configPanelLayout.createSequentialGroup()
                        .add(configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel10)
                            .add(jLabel11))
                        .add(10, 10, 10)
                        .add(configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(configPanelLayout.createSequentialGroup()
                                .add(konfigNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 265, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(32, 32, 32)
                                .add(configChooseComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 139, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(konfigDirTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 520, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(49, 49, 49))
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(konfigDirTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(konfigNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(configChooseComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(configPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(loadKonfigButton)
                    .add(saveKonfigButton))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        configPanel.setBounds(10, 10, 640, 110);
        configLayeredPane.add(configPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("Config", configLayeredPane);

        jLabel5.setText("Directory:");

        jLabel6.setText("Node Recognizer:");

        jLabel7.setText("Log Recognizer:");

        showFilesButton.setText("showFiles");
        showFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFilesAction(evt);
            }
        });

        gzippedCheckBox.setText("gzipped");
        gzippedCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        gzippedCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout directoriesPanelLayout = new org.jdesktop.layout.GroupLayout(directoriesPanel);
        directoriesPanel.setLayout(directoriesPanelLayout);
        directoriesPanelLayout.setHorizontalGroup(
            directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(directoriesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(directoriesPanelLayout.createSequentialGroup()
                        .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel6)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(nodeRecognizerTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                            .add(logRecognizerTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                            .add(logDirTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)))
                    .add(directoriesPanelLayout.createSequentialGroup()
                        .add(gzippedCheckBox)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(showFilesButton)))
                .addContainerGap())
        );
        directoriesPanelLayout.setVerticalGroup(
            directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, directoriesPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(logDirTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(nodeRecognizerTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(logRecognizerTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(directoriesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(gzippedCheckBox)
                    .add(showFilesButton))
                .add(38, 38, 38))
        );
        directoriesPanel.setBounds(10, 10, 640, 120);
        logFilesLayeredPane.add(directoriesPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("Logfiles", logFilesLayeredPane);

        jTabbedPane1.addTab("Extraction", extractionLayeredPane);

        jLabel1.setText("DbUrl:");

        dbUrlTextField.setText("jdbc:oracle:thin:@<server>:1521:<sid>");

        jLabel2.setText("Jdbc-Class:");

        jdbcDriverClassTextField.setText("oracle.jdbc.OracleDriver");

        jLabel3.setText("Db User:");

        jLabel4.setText("Db Password:");

        testConnectionButton.setText("Test Connection");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(testConnectionButton)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel1)
                            .add(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 21, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(dbUserTextField)
                            .add(jdbcDriverClassTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .add(dbPasswordTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(dbUrlTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 451, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(dbUrlTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jdbcDriverClassTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dbUserTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(dbPasswordTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(testConnectionButton)
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel2.setBounds(10, 10, 640, 290);
        dbParamsLayeredPane.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("Db-Params", dbParamsLayeredPane);

        jLabel8.setText("Separator:");

        outputFileFieldSeparatorTextField.setText(";");

        outputFileInsertHeaderCheckBox.setText("insert Header");
        outputFileInsertHeaderCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        outputFileInsertHeaderCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel9.setText("FileName:");

        jLabel12.setText("Fields:");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(outputFileInsertHeaderCheckBox)
                        .add(jPanel4Layout.createSequentialGroup()
                            .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(outputFileFieldSeparatorTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel12))
                        .add(15, 15, 15)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(outputFileFieldsTextField)
                            .add(outputFileNameTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(outputFileFieldSeparatorTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(outputFileInsertHeaderCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(outputFileNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 13, Short.MAX_VALUE)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(outputFileFieldsTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4.setBounds(10, 10, 630, 100);
        extractToFileLayeredPane.add(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        extractFileButton.setText("extract");
        extractFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractFileButtonActionPerformed(evt);
            }
        });

        extractFileButton.setBounds(20, 130, -1, -1);
        extractToFileLayeredPane.add(extractFileButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("FileOutput", extractToFileLayeredPane);

        rulesPanel.setLayout(new javax.swing.BoxLayout(rulesPanel, javax.swing.BoxLayout.Y_AXIS));

        rulesPanel.setAutoscrolls(true);
        rulesPanel.setMaximumSize(new java.awt.Dimension(200, 200));
        rulesPane.add(rulesPanel);

        newExtractionRuleButton.setText("newExtractionRule");
        newExtractionRuleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newExtractionRuleButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(newExtractionRuleButton)
                .add(22, 22, 22))
            .add(rulesPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(newExtractionRuleButton)
                .add(55, 55, 55)
                .add(rulesPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );


        outputTextArea.setColumns(20);
        outputTextArea.setRows(5);
        jScrollPane1.setViewportView(outputTextArea);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void configChooseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configChooseComboBoxActionPerformed
        konfigNameTextField.setText((String)configChooseComboBox.getSelectedItem());
    }//GEN-LAST:event_configChooseComboBoxActionPerformed

    private void loadKonfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadKonfigButtonActionPerformed
        File f = createConfigFileName();
        if (f.exists()) {
            LogEvalConfig config = new LogEvalConfig();
            Properties props = new Properties();
            try {
                config.fromConfigFile(f);
            } catch (IOException e) {
                this.outputTextArea.append(e.toString());
            }
            this.fromLogEvalConfig(config);
        } else {
            outputTextArea.append("Error: not found: " + f.getPath() + "\n");
        }
    }//GEN-LAST:event_loadKonfigButtonActionPerformed

    private void saveKonfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveKonfigButtonActionPerformed
        File f = createConfigFileName();
        if (f.exists()) {
            int res = JOptionPane.showConfirmDialog(this,f.getPath() + " already exists. Ok to overwrite?","Overwrite?",
                    JOptionPane.YES_NO_OPTION);
            if (res != JOptionPane.YES_OPTION)
                return;
        }
        try {
            toLogEvalConfig().toConfigFile(f);
        } catch (IOException e) {
            this.outputTextArea.append(e.toString());
        }
        initConfigChooseCombo();
    }//GEN-LAST:event_saveKonfigButtonActionPerformed

    private void showFilesAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFilesAction
        LogFilesHandler handler =  new LogFilesHandler(toLogEvalConfig(),this);
        StringBuffer res = handler.showFiles();
        outputTextArea.append(res.toString());
    }//GEN-LAST:event_showFilesAction

    private void extractFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractFileButtonActionPerformed
        LogFilesHandler handler = new LogFilesHandler(toLogEvalConfig(),this);
        handler.extractFilesToFileSystem();
    }//GEN-LAST:event_extractFileButtonActionPerformed

    private void newExtractionRuleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newExtractionRuleButtonActionPerformed
// ExtractionRule rule = new ExtractionRule();
        // rulesPanel.add(rule);
        FieldExtraction rule = new FieldExtraction();
        rulesPanel.add(rule);
        rulesPanel.validate();
        System.out.println("showing rule: " + rule.isShowing());
        pack();
    }//GEN-LAST:event_newExtractionRuleButtonActionPerformed
                
    void initConfigChooseCombo() {
        Object current = configChooseComboBox.getSelectedItem();
        File f = new File(this.konfigDirTextField.getText());
        if (f.exists() && f.isDirectory())
            configChooseComboBox.removeAllItems();
        f.listFiles(new FilenameFilter() {
            public boolean accept(File dir, String name) {
                if (name.toLowerCase().endsWith(KONFIGEXTENSION))
                    configChooseComboBox.addItem(name);
                return false;
            }
        });
        configChooseComboBox.setSelectedItem(current);
    }
    
    File createConfigFileName() {
        String filename = this.konfigNameTextField.getText();
        if (!filename.toLowerCase().endsWith(KONFIGEXTENSION))
            filename = filename + KONFIGEXTENSION;
        File f = new File(this.konfigDirTextField.getText() + File.separator + filename);
        return f;
    }        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    void fromLogEvalConfig(LogEvalConfig config) {
        dbPasswordTextField.setText(config.getDbPassword());
        dbUrlTextField.setText(config.getDbUrl());
        dbUserTextField.setText(config.getDbUser());
        gzippedCheckBox.setSelected(config.isGzipped());
        outputFileInsertHeaderCheckBox.setSelected(config.isIncludeHeader());
        jdbcDriverClassTextField.setText(config.getJdbcDriverClass());
        logDirTextField.setText(config.getLogDir());
        logRecognizerTextField.setText(config.getLogRecognizer());
        nodeRecognizerTextField.setText(config.getNodeRecognizer());
        outputFileFieldSeparatorTextField.setText(config.getOutputFieldSeparator());
        outputFileNameTextField.setText(config.getOutputFileName());
        outputFileFieldSeparatorTextField.setText(config.getOutputFileFields());
        testLineTextField.setText(config.getTestLine());
        testRegexTextField.setText(config.getTestRegex());
        testReplaceTextField.setText(config.getTestReplace());
        rulesPanel.removeAll();
        FieldExtractionConfig[] feConfigs = config.getFieldExtractionConfigs();
        for (int i = 0; i < feConfigs.length; i++) {
            FieldExtraction fe = new FieldExtraction();
            fe.fromFieldExtractionConfig(feConfigs[i]);
            rulesPanel.add(fe);
        }
        rulesPanel.validate();
    }
    
    LogEvalConfig toLogEvalConfig() {
        LogEvalConfig config = new LogEvalConfig();
        config.setDbPassword(dbPasswordTextField.getText());
        config.setDbUrl(dbUrlTextField.getText());
        config.setDbUser(dbUserTextField.getText());
        config.setGzipped(gzippedCheckBox.isSelected());
        config.setIncludeHeader(outputFileInsertHeaderCheckBox.isSelected());
        config.setJdbcDriverClass(jdbcDriverClassTextField.getText());
        config.setLogDir(logDirTextField.getText());
        config.setLogRecognizer(logRecognizerTextField.getText());
        config.setNodeRecognizer(nodeRecognizerTextField.getText());
        config.setOutputFieldSeparator(outputFileFieldSeparatorTextField.getText());
        config.setOutputFileName(outputFileNameTextField.getText());
        config.setOutputFileFields(outputFileFieldsTextField.getText());
        config.setTestLine(testLineTextField.getText());
        config.setTestRegex(testRegexTextField.getText());
        config.setTestReplace(testReplaceTextField.getText());
        int fecount = rulesPanel.getComponentCount();
        FieldExtractionConfig[] feConfigs = new FieldExtractionConfig[fecount];
        for (int i = 0; i < fecount; i++) {
            FieldExtraction comp = (FieldExtraction)rulesPanel.getComponent(i);
            feConfigs[i] = comp.toFieldExtractionConfig();
        }
        config.setFieldExtractionConfigs(feConfigs);
        return config;
    }

    public void print(String s) {
        outputTextArea.append(s);
    }
    public void println(String s) {
        outputTextArea.append(s);
        outputTextArea.append("\n");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox configChooseComboBox;
    private javax.swing.JLayeredPane configLayeredPane;
    private javax.swing.JPanel configPanel;
    private javax.swing.JLayeredPane dbParamsLayeredPane;
    private javax.swing.JTextField dbPasswordTextField;
    private javax.swing.JTextField dbUrlTextField;
    private javax.swing.JTextField dbUserTextField;
    private javax.swing.JPanel directoriesPanel;
    private javax.swing.JButton extractFileButton;
    private javax.swing.JLayeredPane extractToFileLayeredPane;
    private javax.swing.JPanel extractionLayeredPanel;
    private javax.swing.JCheckBox gzippedCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jdbcDriverClassTextField;
    private javax.swing.JTextField konfigDirTextField;
    private javax.swing.JTextField konfigNameTextField;
    private javax.swing.JButton loadKonfigButton;
    private javax.swing.JTextField logDirTextField;
    private javax.swing.JLayeredPane logFilesLayeredPane;
    private javax.swing.JTextField logRecognizerTextField;
    private javax.swing.JButton newExtractionRuleButton;
    private javax.swing.JTextField nodeRecognizerTextField;
    private javax.swing.JTextField outputFileFieldSeparatorTextField;
    private javax.swing.JTextField outputFileFieldsTextField;
    private javax.swing.JCheckBox outputFileInsertHeaderCheckBox;
    private javax.swing.JTextField outputFileNameTextField;
    private javax.swing.JTextArea outputTextArea;
    private java.awt.ScrollPane rulesPane;
    private java.awt.ScrollPane rulesPane1;
    private javax.swing.JPanel rulesPanel;
    private javax.swing.JPanel rulesPanel1;
    private javax.swing.JButton saveKonfigButton;
    private javax.swing.JButton showFilesButton;
    private javax.swing.JButton testButton;
    private javax.swing.JButton testConnectionButton;
    private javax.swing.JTextField testLineTextField;
    private javax.swing.JTextField testReplaceTextField;
    // End of variables declaration//GEN-END:variables
    
}
